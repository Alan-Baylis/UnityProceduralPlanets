#pragma kernel main

#include "planet.cginc"


Texture2D<float3> _chunkNormalMap;
float3 _rangeA;
float3 _rangeB;
float3 _rangeC;
float3 _rangeD;
float _chunkRelativeSize;

RWTexture2D<float4> _chunkDiffuseMap;

[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float w, h;

	_chunkDiffuseMap.GetDimensions(w, h);
	float2 uv = id.xy / float2(w - 1, h - 1);

	float3 posTop = _rangeA * (1 - uv.x) + _rangeB * uv.x;
	float3 posBottom = _rangeD * (1 - uv.x) + _rangeC * uv.x;
	float3 pos = posTop * (1 - uv.y) + posBottom * uv.y;

	float3 dir = normalize(pos);


	float3 normal = UNPACK_NORMAL(SampleLinearFloat3(_chunkNormalMap, uv));

	float slope = dot(dir, normal);

	
	float3 grass = float3(121, 136, 69) / float3(255, 255, 255); // grass
	float3 clay = float3(139, 133, 75) / float3(255, 255, 255); // clay
	float3 rock = float3(100, 100, 100) / float3(255, 255, 255); // rock


	float3 color;
	
	if (slope > 0.9) color = grass;
	else if(slope > 0.7) color = clay;
	else color = rock;


	// DEBUG
	//color = float3(1, 1, 1) * slope;
	//color = normal;
	//color = SampleLinearFloat(_chunkNormalMap, uv);

	_chunkDiffuseMap[id.xy] = float4(color, 1);

}