#pragma kernel main

#include "planet.compute.cginc"



Texture2D _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D _chunkSlopeAndCurvatureMap;
SamplerState sampler_chunkSlopeAndCurvatureMap;

float _slopeModifier;
float3 _rangeDirA;
float3 _rangeDirB;
float3 _rangeDirC;
float3 _rangeDirD;



RWTexture2D<float> _chunkHeightMapNew;



[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = GetUV(_chunkHeightMapNew, id.xy);



	float height = _chunkHeightMap[id.xy];
	//float height = clamp(s0, 0, 1);

	float3 dir = lerp(
		lerp(_rangeDirA, _rangeDirB, uv.x),
		lerp(_rangeDirD, _rangeDirC, uv.x),
		uv.y
	);
	dir = normalize(dir);

	float2 slopeXY = _chunkSlopeAndCurvatureMap[id.xy];
	float slope = sqrt(slopeXY.x * slopeXY.x + slopeXY.y * slopeXY.y);


	float distToEdge = 0.5 - max(abs(uv.x - 0.5), abs(uv.y - 0.5));
	distToEdge = smoothstep(0, 0.1, distToEdge);

	//slope = clamp(slope, 0, 1);
	//height += slope * (abs(snoise(dir * 100, 20, 1.4))) * 0.1;

	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;


	// DEBUG
	//height = uv.x;
	//height = slope;

	//height = clamp(height, 0, 1);
	_chunkHeightMapNew[id.xy] = height;
}