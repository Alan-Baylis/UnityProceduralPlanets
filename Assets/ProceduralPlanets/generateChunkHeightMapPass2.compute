#pragma kernel main

#include "planet.compute.cginc"



Texture2D _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D<float2> _chunkSlopeAndCurvatureMap;
SamplerState sampler_chunkSlopeAndCurvatureMap;

float _slopeModifier;

float3 _rangeUnitCubePosA;
float3 _rangeUnitCubePosB;
float3 _rangeUnitCubePosC;
float3 _rangeUnitCubePosD;



RWTexture2D<float> _chunkHeightMapNew;



[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = getUv(_chunkHeightMapNew, id.xy);

	float3 unitCubePos = lerp(
		lerp(_rangeUnitCubePosA, _rangeUnitCubePosB, uv.x),
		lerp(_rangeUnitCubePosD, _rangeUnitCubePosC, uv.x),
		uv.y
	);

	float3 dirNorm = unitCubeToUnitSphere(unitCubePos);

	float height = _chunkHeightMap[id.xy];
	//float height = clamp(s0, 0, 1);

	float2 slopeXY = _chunkSlopeAndCurvatureMap[id.xy];
	float slope = length(slopeXY);


	float distToEdge = 0.5 - max(abs(uv.x - 0.5), abs(uv.y - 0.5));
	distToEdge = smoothstep(0, 0.1, distToEdge);

	//slope = clamp(slope, 0, 1);
	height += slope * (abs(snoise(dirNorm * 100, 20, 1.4))) * 0.01;

	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;


	// DEBUG
	//height = uv.x;
	//height = slope;

	//height = clamp(height, 0, 1);
	_chunkHeightMapNew[id.xy] = height;
}