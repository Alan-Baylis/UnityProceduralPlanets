#pragma kernel main

#include "planet.compute.cginc"



Texture2D _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

float _chunkRelativeSize;
float3 _rangeDirA;
float3 _rangeDirB;
float3 _rangeDirC;
float3 _rangeDirD;



RWTexture2D<float> _chunkHeightMapNew;



[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = GetUV(_chunkHeightMapNew, id.xy);


	int w, h;
	_chunkHeightMap.GetDimensions(w, h);
	int2 off = int2(-1, 0);
	int2 pos = id.xy;
	if (pos.x == 0) pos.x = 1;
	if (pos.y == 0) pos.y = 1;
	float s0 = _chunkHeightMap[pos].r;
	float sx0 = _chunkHeightMap[pos + off.xy].r;
	float sy0 = _chunkHeightMap[pos + off.yx].r;

	float slope = (abs(sx0 - s0) + abs(sy0 - s0)) / _chunkRelativeSize * (w / 256.0);

	float height = clamp(s0, 0, 1);

	float3 dir = lerp(
		lerp(_rangeDirA, _rangeDirB, uv.x),
		lerp(_rangeDirD, _rangeDirC, uv.x),
		uv.y
	);
	dir = normalize(dir);


	float distToEdge = 0.5 - max(abs(uv.x - 0.5), abs(uv.y - 0.5));
	distToEdge = smoothstep(0, 0.1, distToEdge);

	slope = clamp(slope, 0, 1);
	height += slope * (abs(snoise(dir * 100, 20, 1.4))) * 0.1;

	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;


	// DEBUG
	//height = uv.x;
	//height = slope;

	height = clamp(height, 0, 1);
	_chunkHeightMapNew[id.xy] = height;
}