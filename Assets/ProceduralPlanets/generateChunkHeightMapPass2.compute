#pragma kernel main

#include "planet.compute.cginc"



Texture2D<float> _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D<float2> _chunkSlopeAndCurvatureMap;
SamplerState sampler_chunkSlopeAndCurvatureMap;


float3 _rangeUnitCubePosA;
float3 _rangeUnitCubePosB;
float3 _rangeUnitCubePosC;
float3 _rangeUnitCubePosD;



RWTexture2D<float> _chunkHeightMapNew;




[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = getUv(_chunkHeightMapNew, id.xy);

	float3 unitCubePos = lerp(
		lerp(_rangeUnitCubePosA, _rangeUnitCubePosB, uv.x),
		lerp(_rangeUnitCubePosD, _rangeUnitCubePosC, uv.x),
		uv.y
	);

	float3 dir = unitCubeToUnitSphere(unitCubePos);

	double height = double(_chunkHeightMap[id.xy]);
	//float height = clamp(s0, 0, 1);

	double2 slopeXY = double2(_chunkSlopeAndCurvatureMap[id.xy].xy);
	double slope = saturate(length(slopeXY));


	//slope = clamp(slope, 0, 1);
	height += slope * (abs(snoise(dir * 100, 20, 1.4))) * 0.01;
	//if(slope > 0.01) height += slope;
	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;
	//height += 0.001;
	//height += slope * 0.001;


	// DEBUG
	//height = uv.x;
	//height = slope;

	//height = clamp(height, 0, 1);
	_chunkHeightMapNew[id.xy] = float(height);
}