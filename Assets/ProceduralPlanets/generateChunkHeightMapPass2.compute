#pragma kernel main

#include "planet.compute.cginc"



Texture2D _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

float _chunkRelativeSize;
float3 _rangeDirA;
float3 _rangeDirB;
float3 _rangeDirC;
float3 _rangeDirD;



RWTexture2D<float> _chunkHeightMapNew;



[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = GetUV(_chunkHeightMapNew, id.xy);


	int w, h;
	_chunkHeightMap.GetDimensions(w, h);
	float off = 1.5 / (w - 1);
	float sx0 = _chunkHeightMap.SampleLevel(sampler_chunkHeightMap, uv + float2(off, 0), 0).r;
	float sx1 = _chunkHeightMap.SampleLevel(sampler_chunkHeightMap, uv + float2(-off, 0), 0).r;
	float sy0 = _chunkHeightMap.SampleLevel(sampler_chunkHeightMap, uv + float2(0, off), 0).r;
	float sy1 = _chunkHeightMap.SampleLevel(sampler_chunkHeightMap, uv + float2(0, -off), 0).r;
	float slope = (abs(sx0 - sx1) + abs(sy0 - sy1)) / _chunkRelativeSize * (w / 256.0);



	float height = _chunkHeightMap[id.xy].r;

	float3 dir = lerp(
		lerp(_rangeDirA, _rangeDirB, uv.x),
		lerp(_rangeDirD, _rangeDirC, uv.x),
		uv.y
	);
	dir = normalize(dir);


	slope = clamp(slope, 0, 1);
	height += slope * (abs(snoise(dir * 100, 10, 1.5))) * 0.1;

	//height += 0.05 * snoise(dir * 10 * slope, 5, 2);


	// DEBUG
	//height = uv.x;

	_chunkHeightMapNew[id.xy] = height;
}