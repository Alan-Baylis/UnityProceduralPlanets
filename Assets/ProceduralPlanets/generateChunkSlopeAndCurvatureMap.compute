#pragma kernel parentExists
#pragma kernel parentDoesNotExist

#include "planet.compute.cginc"



Texture2D<float> _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D<float2> _parentChunkSlopeAndCurvatureMap;
SamplerState sampler_parentChunkSlopeAndCurvatureMap;

float2 _uvOffsetInParent;


int _slopeModifier;

RWTexture2D<float4> _chunkSlopeAndCurvatureMap;



int2 getSlopeInt(int2 idXy)
{
	int w, h;
	_chunkHeightMap.GetDimensions(w, h);
	int3 off = int3(-1, 0, 1);
	int2 s11pos = idXy;
	s11pos = max(s11pos, int2(1, 1));
	s11pos = min(s11pos, int2(w - 1, h - 1));
	// s00 __ s10 __ s20
	//  |      |      |
	// s01 __ s11 __ s21
	//  |      |      |
	// s02 __ s12 __ s22
	int s00 = _chunkHeightMap[s11pos + off.xx].r;
	int s10 = _chunkHeightMap[s11pos + off.yx].r;
	int s20 = _chunkHeightMap[s11pos + off.zx].r;

	int s01 = _chunkHeightMap[s11pos + off.xy].r;
	int s11 = _chunkHeightMap[s11pos].r;
	int s21 = _chunkHeightMap[s11pos + off.zy].r;

	int s02 = _chunkHeightMap[s11pos + off.xz].r;
	int s12 = _chunkHeightMap[s11pos + off.yz].r;
	int s22 = _chunkHeightMap[s11pos + off.zz].r;

	// https://en.wikipedia.org/wiki/Sobel_operator
	// 1 __ 0 __-1
	// |    |    |
	// 2 __ 0 __-2
	// |    |    |
	// 1 __ 0 __-1
	int sx = (s00 - s20) + (s01 - s21) * 2 + (s02 - s22);
	// 1 __ 2 __ 1
	// |    |    |
	// 0 __ 0 __ 0
	// |    |    |
	//-1 __-2 __-1
	int sy = (s00 - s02) + (s10 - s12) * 2 + (s20 - s22);

	return int2(sx, sy);
}

float2 getSlopeFloat(int2 idXy)
{
	int w, h;
	_chunkHeightMap.GetDimensions(w, h);
	int3 off = int3(-1, 0, 1);
	int2 s11pos = idXy;
	s11pos = max(s11pos, int2(1, 1));
	s11pos = min(s11pos, int2(w - 1, h - 1));
	// s00 __ s10 __ s20
	//  |      |      |
	// s01 __ s11 __ s21
	//  |      |      |
	// s02 __ s12 __ s22
	float s00 = _chunkHeightMap[s11pos + off.xx].r;
	float s10 = _chunkHeightMap[s11pos + off.yx].r;
	float s20 = _chunkHeightMap[s11pos + off.zx].r;

	float s01 = _chunkHeightMap[s11pos + off.xy].r;
	float s11 = _chunkHeightMap[s11pos].r;
	float s21 = _chunkHeightMap[s11pos + off.zy].r;

	float s02 = _chunkHeightMap[s11pos + off.xz].r;
	float s12 = _chunkHeightMap[s11pos + off.yz].r;
	float s22 = _chunkHeightMap[s11pos + off.zz].r;

	// https://en.wikipedia.org/wiki/Sobel_operator
	// 1 __ 0 __-1
	// |    |    |
	// 2 __ 0 __-2
	// |    |    |
	// 1 __ 0 __-1
	float sx = (s00 - s20) + (s01 - s21) * 2 + (s02 - s22);
	// 1 __ 2 __ 1
	// |    |    |
	// 0 __ 0 __ 0
	// |    |    |
	//-1 __-2 __-1
	float sy = (s00 - s02) + (s10 - s12) * 2 + (s20 - s22);

	return float2(sx, sy);
}

#define MAX_INT 2147483647


[numthreads(16, 16, 1)]
void parentExists(uint3 id : SV_DispatchThreadID)
{
	float2 slope = getSlopeFloat(id.xy) * _slopeModifier;
	
	//DEBUG
	//slope = float(MAX_INT, 0);

	_chunkSlopeAndCurvatureMap[id.xy] = float4(slope, 0, 0);
}

[numthreads(16, 16, 1)]
void parentDoesNotExist(uint3 id : SV_DispatchThreadID)
{
	float2 slope = getSlopeFloat(id.xy) * _slopeModifier;
	_chunkSlopeAndCurvatureMap[id.xy] = float4(slope, 0, 0);
}